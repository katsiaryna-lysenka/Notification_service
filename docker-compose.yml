version: '3.8'

services:
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification-service-container
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    environment:
      - ATLAS_URI=mongodb://mongodb:27017
      - DB_NAME=pymongo
    volumes:
      - .env:/app/.env
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq-container
    ports:
      - "5672:5672"    # AMQP
      - "15672:15672"  # RabbitMQ Management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=12345
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit inet_dist_listen_min 25672 -rabbit inet_dist_listen_max 25672
    networks:
      - backend

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: producer
    depends_on:
      - rabbitmq
      - receiver
    ports:
      - "7000:7000"
    environment:
      RABBITMQ_USERNAME: "admin"
      RABBITMQ_PASSWORD: "pass"
      RABBITMQ_HOST: rabbitmq-container
      RABBITMQ_QUEUE: dataqueue
      RABBITMQ_ROUTING_KEY: dataqueue
      RABBITMQ_EXCHANGE: exchange_test
      SERVER_PORT: 7000
      SERVER_HOST: receiver
    networks:
      - backend
    restart: always

  receiver:
    container_name: receiver
    build:
      context: ./receiver
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - rabbitmq
    ports:
      - "7010:7010"
    environment:
      RABBITMQ_USERNAME: admin
      RABBITMQ_PASSWORD: pass
      RABBITMQ_HOST: rabbitmq-container
      RABBITMQ_QUEUE: dataqueue
      RABBITMQ_ROUTING_KEY: dataqueue
      RABBITMQ_EXCHANGE: exchange_test
    networks:
      - backend

  mongodb:
    image: bitnami/mongodb:latest
    container_name: mongodb-container
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=12345
    networks:
      - backend

networks:
  backend:
    driver: bridge
